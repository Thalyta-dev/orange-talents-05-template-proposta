#bancodedados
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL:jdbc:mysql://localhost/propostas?createDatabaseIfNotExist = true}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true    

management.endpoints.web.cors.allowed-origins=http://localhost:8080/healf
management.endpoints.web.cors.allowed-methods=GET,POST
management.endpoints.jmx.exposure.include=health,info

spring.application.name= @project.artifactId@

#jaeger
# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:propostas}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# actuator
management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,beans

info.app.name=@project.name@
info.app.version=@project.version@
#jwt


#metricas
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true`


management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
spring.profiles.active = dev

# actuator
#Para fazer fallback

feign.hystrix.enabled=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/master}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/master/protocol/openid-connect/certs}

#loggs
